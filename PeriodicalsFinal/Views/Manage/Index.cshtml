@model PeriodicalsFinal.DataAccess.Models.IndexViewModel

@using PeriodicalsFinal.DataAccess.Models

@{
    ViewBag.Title = "Manage Your account";
    ApplicationUser user = ViewBag.User;
    IEnumerable<SubscriptionModel>
    subs = ViewBag.Subs;

    var imgSrc = "";

    if (user.UserPhoto != null)
    {
        var base64 = Convert.ToBase64String(user.UserPhoto);
        imgSrc = String.Format("data:image/gif;base64,{0}", base64);
    }

}

<h2>@ViewBag.Title.</h2>
<p class="text-success">@ViewBag.StatusMessage</p>
<div class="row">
    <div class="col-md-3">
        <div class="row">

            @if (user.UserPhoto != null)
            {
                <div class="user-photo">
                    <img src="@imgSrc" alt="user photo" class="img-fluid" />
                </div>
            }

            @using (Html.BeginForm("Index", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <span>Allowed png, jpg (Max: 3mb)</span>
                <input type="file" name="postedFile" class="btn btn-custom" accept="image/png,image/jpeg" />
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
                <input type="submit" id="btnUpload" value="Upload" class="btn btn-custom" />


            }
        </div>

    </div>
    <div class="col-md-9">
        <div class="user-profile">
            @if (user.LockoutEndDateUtc != null)
            {
                <p class="text-danger">Lockout end date: @user.LockoutEndDateUtc</p>
            }

            @if (User.IsInRole("Admin") && user.UserName != User.Identity.Name)
            {
                @Html.ActionLink("Ban user", "LockoutUser", "Manage", new { userName = user.UserName }, new { @class = "btn btn-custom" })
                @Html.ActionLink("Unban user", "UnlockUser", "Manage", new { userName = user.UserName }, new { @class = "btn btn-custom" })
                @Html.ActionLink("Make Admin", "MakeAdmin", "Manage", new { userName = user.UserName }, new { @class = "btn btn-custom" })
                @Html.ActionLink("Make publisher", "MakePublisher", "Manage", new { userName = user.UserName }, new { @class = "btn btn-custom" })
                @Html.ActionLink("Make User", "MakeUser", "Manage", new { userName = user.UserName }, new { @class = "btn btn-custom" })
            }

            <div class="user-profile-name">
                <label>Name:</label>
                <p>@user.UserName (@ViewBag.UserRole[0])</p>
            </div>
            <hr />
            <div class="user-profile-account">
                <label>Money on your account:</label>
                <p>@String.Format("{0:0.00}", user.Account)$</p>
                @Html.ActionLink("Replenish account", "PaymentConfirm", "Payment")
            </div>
            <hr />
            <div class="user-profile-password">
                <label>Password:</label>
                <p>
                    [
                    @if (Model.HasPassword)
                    {
                        @Html.ActionLink("Change your password", "ChangePassword")
                    }
                    else
                    {
                        @Html.ActionLink("Create", "SetPassword")
                    }
                    ]
                </p>
            </div>
            <hr />
            <div class="user-profile-birthday">
                <label>Birthday</label>
                <p>
                    @if (ViewBag.Birthday)
                    {
                        <h3 class="text-success">Happy Birthday! 🎉</h3>
                        <h4>You have bonuses to account replenishment!</h4>
                        <h4>&lt;= 10$ - 20% / &lt;= 50$ - 15$ / >50$ - 10% </h4>
                    }

                    @if (user.BirthDate != null)
                    {
                        @user.BirthDate.Value.ToString("d/M/yyyy")
                    }
                    else
                    {
                        @Html.ActionLink("Set Birthday", "SetBirthday", "Manage")
                    }

                </p>
            </div>
            <hr />
            <div class="user-profile-subscriptions">
                <label>Subscriptions:</label>
                @foreach (SubscriptionModel item in subs)
                {
                    <div class="subscribe">
                        <a href="@Url.Action("Index", "Edition", new { magazine = item.Edition.Magazine.MagazineName, year = item.Edition.EditionYear, month = (int)item.Edition.EditionMonth })">
                            <span>@item.Edition.Magazine.MagazineName - </span>
                            <span>@item.Edition.EditionTitle - </span>
                            <span>@item.Edition.EditionYear - </span>
                            <span>@item.Edition.EditionMonth</span>
                        </a>

                        <hr />
                    </div>

                }
            </div>
        </div>
    </div>
</div>


<div>

    @*<dl class="dl-horizontal">




        <dt>External Logins:</dt>
        <dd>
            @Model.Logins.Count [
            @Html.ActionLink("Manage", "ManageLogins") ]
        </dd>*@
    @*
        Phone Numbers can used as a second factor of verification in a two-factor authentication system.

        See
        <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
        for details on setting up this ASP.NET application to support two-factor authentication using SMS.

        Uncomment the following block after you have set up two-factor authentication
    *@
    @*
        <dt>Phone Number:</dt>
        <dd>
            @(Model.PhoneNumber ?? "None")
            @if (Model.PhoneNumber != null)
            {
            <br />
            <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
            using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
            @Html.AntiForgeryToken()
            <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
            }
            }
            else
            {
            <text>
                [&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                }
        </dd>
    *@
    @*
        <dt>Two-Factor Authentication:</dt>
        <dd>
            <p>
                There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication.
            </p>*@
    @*@if (Model.TwoFactor)
        {
        using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
        @Html.AntiForgeryToken()
        <text>
            Enabled
            <input type="submit" value="Disable" class="btn btn-link" />
        </text>
        }
        }
        else
        {
        using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
        @Html.AntiForgeryToken()
        <text>
            Disabled
            <input type="submit" value="Enable" class="btn btn-link" />
        </text>
        }
        }*@
    @*
            </dd>
        </dl>*@
</div>
